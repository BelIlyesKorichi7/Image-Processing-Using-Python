import numpy as np #We use these libraries to play and work with the concept of matrices, because the images require that,
#and they also contain some mathematical statistical functions branching from them.

import math # We use these libraries to do math operations on images if we need to

#We use these libraries to handle images, read, load an image, save, copy, cut, display, and the like
import matplotlib.pyplot as plt

#We use these libraries to handle images, read, load an image, save, copy, cut, display, and the like
from PIL import Image

#We use this library to cut an image into a snippet and combine it randomly into a new image
import random

#Load and read the image from its location path and save it in a named variable img

img = plt.imread("FB_IMG_15911232865783554.jpg")

#Convert the image into matrix form to work on it directly and save it in another named variable img_array

img_array = np.array(plt.imread("FB_IMG_15911232865783554.jpg"))

#Modify the image display settings by disabling the display of the axes with the image

plt.axis('off')

#Display the real image {img} that we have not converted into a matrix

plt.imshow(img)

#Direct printing of the image shape that includes
#the length of the image: 960 the width of the image: 720 and the number of layers or color channels: 3

print(img.shape[:2])

print(img.shape)

#The value of the last pixel in the matrix can be displayed by locating it at the height and width of the image obtained earlier

print(img[959, 719])

#The value of the last pixel contains three values that represent its pixel value, respectively,
#in each layer or color channel that makes up an image, and these are the three. We will display each value separately.

print(img[959, 719, 0])

print(img[959, 719, 1])

print(img[959, 719, 2])
